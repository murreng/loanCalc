"use strict";var _postcss=_interopRequireDefault(require("postcss"));Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function hasVar(string){return string.includes("var(")}function resolveValue(value,maps){return hasVar(value)?value.replace(/var\(--.*?\)/g,match=>maps[match.slice(4,-1)]||match):value}function getProperty(nodes){let propertys={};return nodes.walkRules(rule=>{":root"!==rule.selector||rule.each(({type,prop:property,value})=>{"decl"===type&&(propertys[property]=value)})}),propertys}function circularReference(maps){return Object.keys(maps).reduce((previousMaps,property)=>(previousMaps[property]=resolveValue(maps[property],maps),previousMaps),maps)}var _default=_postcss.default.plugin("postcss-at-rules-variables",(options={})=>(options={atRules:[...new Set(["for","if","else","each","mixin","custom-media",...(options.atRules||"")])],variables:options.variables||{}},nodes=>{const maps=circularReference(Object.assign(getProperty(nodes),options.variables));nodes.walkAtRules(new RegExp(options.atRules.join("|")),rules=>{rules.params=resolveValue(rules.params,maps)})}));exports.default=_default,module.exports=exports.default;